;
; Include all imported modules and their data/functions.
;

include(stdlib.plh)
include(testlib.plh)

;
; Declare all global variables for this module.
;

byte hello[] = "Hello, Apple "
byte a1[] = "1"
byte a2[] = "]["
byte a2p[] = "][+"
byte a2e[] = "//e"
byte a2c[] = "//c"
byte a3[] = "///"
word struct[] = 1, 10, 100, 1000, 10000
byte spaces[] = "   "

;
; Define functions.
;

def tens(start)
  word i
  i = start
  repeat
    print:hex(i)
    print:str(@spaces)
    print:dec(i)
    print:newln()
    i = i / 10
  until i == 0
end

def ascii
  byte i
  i = 32
  while i < 128
    putc(i)
    i = i + 1
  loop
end

def nums(range)
  word i
  for i = range downto -range step range/10
    puti(i)
    putln
  next
end

export def main(range)
  nums(*range)
  tens(*range*10)
  ascii
  putln
  puts(@hello)
  when MACHID & $C8
    is $08
      puts(@a1)
    is $00
      puts(@a2)
    is $40
      puts(@a2p)
    is $80
      puts(@a2e)
    is $88
      puts(@a2c)
    is $C0
      puts(@a3)
    otherwise
      putc('?')
  wend
  putln
end

main(@struct:6)
done
