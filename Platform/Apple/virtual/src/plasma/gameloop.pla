;==================================================================================================
; Handy constants.
const FALSE = 0
const TRUE  = !FALSE

;==================================================================================================
; Hardware addresses.
const keyboard  = $C000
const keystrobe = $C010
const ptr = $6000
const f1 = 0
const f2 = 2

;==================================================================================================
; Strings.
byte hellostr[] = "Hello, world.\n"
byte str2[] = "Second.\n"

predef func1, func2
word myclass
word table = @func1, @func2

;==================================================================================================
; Definitions used by assembly code
asm __defs
!SOURCE "../plvm02zp.inc"
INTERP  =       $03D0
LCRDEN  =       $C080
LCWTEN  =       $C081
ROMEN   =       $C082
LCRWEN  =       $C083
LCBNK2  =       $00
LCBNK1  =       $08
end
        
;==================================================================================================
; Print a string
asm puts
        TXA
        PHA
        LDA     ESTKL,X
        STA     TMPL
        LDA     ESTKH,X
        STA     TMPH
        LDY     #0
        LDA     (TMPL),Y
        TAX
        INY
        BIT     ROMEN
-       LDA     (TMPL),Y
        ORA     #$80
        JSR     $FDED
        INY
        DEX
        BNE     -
        BIT     LCRDEN+LCBNK2
        PLA
        TAX
        RTS
end

;==================================================================================================
; Print a 16-bit hex value, followed by a space
asm printHex
        BIT     ROMEN
        LDA     ESTKH,X
        JSR     $FDDA
        LDA     ESTKL,X
        JSR     $FDDA
        LDA     #$A0
        JSR     $FDED
        BIT     LCRDEN+LCBNK2
        RTS
end

;==================================================================================================
; Main loop.
;
def func1()
  printHex(1)
end
def func2()
  printHex(2)
end

myclass = @table
table.f2()
;(myclass).f2()
((myclass):f2)()
puts(@hellostr)
func1(@hellostr)

done